@inherits UmbracoViewPage<LeBlenderModel>
@using Lecoati.LeBlender.Extension.Models

@foreach (var item in Model.Items)
{
    @renderContent(item)
}

@helper renderContent(LeBlenderValue content)
{
    var contentPicker = content.GetValue<IEnumerable<IPublishedContent>>("contentPicker");
    var title = content.GetValue<string>("title");
    var bottomSpacing = content.GetValue<bool>("removeBottomSpacing");
    var layout = content.GetValue<UtilityEnums.ContentLayout>("layout");

    if (contentPicker != null && contentPicker.Any())
    {
        var speaker = contentPicker.FirstOrDefault() as Employee;
        var renderLayout = layout == UtilityEnums.ContentLayout.ContentRight ?
                        "speaker--right" :
                        "";

        <div class="container">
            <div class="row">
                <div class="col-xs-12">
                    <div class="row speaker speaker--spot @(renderLayout) @(Umbraco.If(bottomSpacing, "speaker--remove-bottom-spacing"))">
                        <div class="col-xs-12 col-ms-6 col-sm-6 speaker__media">
                            @{ Html.RenderPartial(
                            "Components/_Media",
                            new MediaViewModel
                            {
                                Image = speaker.Image,
                                GridSettings = new GridSettings
                                {
                                    GridMs = 6,
                                    GridTotalPadding = 0
                                },
                                MediaHeights = new MediaHeights
                                {
                                    HeightXxl = 850,
                                    HeightXl = 750,
                                    HeightLg = 650,
                                    HeightMd = 550,
                                    HeightSm = 450,
                                    HeightXs = 350
                                }
                            }); }
                        </div>
                        <div class="col-xs-12 col-ms-6 col-sm-6 speaker__content">
                            <div class="speaker__inner">
                                <h3>@speaker.Name</h3>
                                @{ Html.RenderPartial("Components/_SoMe", new SoMeViewModel
                                    {
                                        FacebookUrl = speaker.FacebookUrl,
                                        InstagramUrl = speaker.InstagramUrl,
                                        LinkedInUrl = speaker.LinkedInUrl,
                                        TwitterUrl = speaker.TwitterUrl
                                    }); }
                                @if (speaker.Content != null)
                                {
                                    <div class="speaker__text">
                                        @Html.Raw(speaker.Content)
                                    </div>
                                }
                                @if (!title.IsNullOrWhiteSpace())
                                {
                                    <p class="speaker__title">@title</p>
                                }
                                <div class="speaker__content-spacer"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}