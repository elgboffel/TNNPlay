@inherits UmbracoViewPage<OverviewPageVideo>
@using BaseSite.Web.Helpers

@{
    Layout = "_Layout.cshtml";

    var videoPicker = Model.VideoPicker;

    var videoPages = Model.Descendants<VideoPage>()
            .Where(x => x.IsVisible())
            .OrderByDescending(x => x.Date);
}

<div class="container">
    <div class="row">
        <div class="col-xs-12">
            @Html.CachedPartial(
           "Components/_Breadcrumb",
           new BreadcrumbViewModel
           {
               CurrentPage = Model,
               ShowCurrentPage = true,
               ClassModifier = "breadcrumb--brand margin-bt70 margin-t20",
               DropdownClassModifier = "dropdown--brand dropdown--bg-brown"
           }, 3600, cacheByPage: true)
        </div>
    </div>
    @if (videoPicker != null && videoPicker.Any())
    {
        @renderHeader(videoPicker.First())
    }
    else
    {
        @renderHeader(videoPages.First())
    }
    <div class="row">
        <div class="col-xs-12">
            <div class="icon"></div>
            <h4 class="color-brand margin-bt30">Flere Videoer</h4>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            <div class="utility-layout">
                <div class="utility-layout__heading">
                    <h5>Filter</h5>
                </div>
                @renderDropdowns()
                <div class="utility-layout__lg">
                    <form class="search-form search-form--oval" role="search" action="@Umbraco.Url(Model.Id)">
                        <div class="search-form__submit" data-action="">
                            <svg width="100%" height="100%" viewBox="0 0 20 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;"><rect id="Moodbord" x="-333" y="-1457" width="1440" height="3797" style="fill:none;" /><g id="fa-search"><path id="fa-search1" d="M13.846,8.462c0,-1.483 -0.527,-2.751 -1.58,-3.805c-1.054,-1.053 -2.322,-1.58 -3.804,-1.58c-1.483,0 -2.751,0.527 -3.805,1.58c-1.053,1.054 -1.58,2.322 -1.58,3.805c0,1.482 0.527,2.75 1.58,3.804c1.054,1.053 2.322,1.58 3.805,1.58c1.482,0 2.75,-0.527 3.804,-1.58c1.053,-1.054 1.58,-2.322 1.58,-3.804Zm6.154,10c0,0.416 -0.152,0.777 -0.457,1.081c-0.304,0.305 -0.665,0.457 -1.081,0.457c-0.433,0 -0.794,-0.152 -1.082,-0.457l-4.123,-4.11c-1.434,0.993 -3.033,1.49 -4.795,1.49c-1.146,0 -2.242,-0.222 -3.288,-0.667c-1.045,-0.445 -1.947,-1.046 -2.704,-1.803c-0.757,-0.757 -1.358,-1.659 -1.803,-2.704c-0.445,-1.046 -0.667,-2.142 -0.667,-3.287c0,-1.146 0.222,-2.242 0.667,-3.288c0.445,-1.045 1.046,-1.947 1.803,-2.704c0.757,-0.757 1.659,-1.358 2.704,-1.803c1.046,-0.445 2.142,-0.667 3.288,-0.667c1.145,0 2.241,0.222 3.287,0.667c1.045,0.445 1.947,1.046 2.704,1.803c0.757,0.757 1.358,1.659 1.803,2.704c0.445,1.046 0.667,2.142 0.667,3.288c0,1.762 -0.497,3.361 -1.49,4.795l4.122,4.123c0.297,0.296 0.445,0.657 0.445,1.082Z" style="fill:#b4b5a2;fill-rule:nonzero;" /></g></svg>
                        </div>
                        <input type="text" name="video" class="search-form__input" placeholder="Søg efter en video..." autocomplete="off">
                    </form>
                </div>
            </div>
        </div>
    </div>
    @if (Request.QueryString["t"] != null)
    {
        @Html.Action(
             "GetPage",
             "MediaList",
             new MediaListViewModel()
             {
                 CardClassModifier = "card--video",
                 SearchType = SearchType.SearchVideoBySelectedTag,
                 MediaType = RenderMediaTypes.Video,
                 ViewRenderMode = ViewRenderMode.EnableBootstrap,
                 ShowLead = false,
                 ItemsPerPage = 20,
                 GridSettings = new GridSettings
                 {
                     GridXl = 3,
                     GridLg = 4,
                     GridMs = 6,
                 }
             })
    }
    else if (Request.QueryString["video"] != null)
    {
        @Html.Action(
             "GetPage",
             "MediaList",
             new MediaListViewModel()
             {
                 CardClassModifier = "card--video",
                 SearchType = SearchType.SeachVideoByQuery,
                 MediaType = RenderMediaTypes.Video,
                 ViewRenderMode = ViewRenderMode.EnableBootstrap,
                 ShowLead = false,
                 ItemsPerPage = 20,
                 GridSettings = new GridSettings
                 {
                     GridXl = 3,
                     GridLg = 4,
                     GridMs = 6,
                 }
             })
    }
    else
    {
        @Html.Action(
            "GetPage",
            "MediaList",
            new MediaListViewModel
            {
                CardClassModifier = "card--video",
                MediaList = videoPages,
                MediaType = RenderMediaTypes.Video,
                ViewRenderMode = ViewRenderMode.EnableBootstrap,
                ShowLead = false,
                ItemsPerPage = 20,
                GridSettings = new GridSettings
                {
                    GridXl = 3,
                    GridLg = 4,
                    GridMs = 6,
                }
            })
        }
</div>

@helper renderHeader(IPublishedContent content)
{
    var page = content as VideoPage;
    <div class="row">
        <div class="col-xs-12">            
            <div class="embed-responsive embed-responsive-16by9 video-embed margin-bt30">
                @(page.EmbedVideo as MvcHtmlString)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-md-10 col-md-offset-1">
            @{ Html.RenderPartial(
                "Components/_PageHeader",
                new PageHeaderViewModel
                {
                    ClassModifier = "",
                    Trumpet = page.Trumpet,
                    Heading = page.Heading,
                    Date = page.Date,
                }); }
        </div>
    </div>
}

@helper renderDropdowns()
{

var dropdownTravels = Umbraco.TypedContent(1145)
    .Children()
    .OrderBy(x => x.Name);

var travelFormQuery = Umbraco.GetQueryString("t", "");
var travelFormSelectName = !string.IsNullOrEmpty(travelFormQuery) ? travelFormQuery.GetTagNameFromId() : "Alle";

    <div class="utility-layout__md">
        <div class="dropdown dropdown--oval">
            <div class="dropdown__label">Rejseform</div>
            <button type="button" class="dropdown__expander dropdown__expander--divider">@travelFormSelectName</button>
            <ul class="dropdown__menu">
                @foreach (var item in dropdownTravels)
                {
                    <li><a href="@Umbraco.Url(Model.Id)?t=@item.Id">@item.Name</a></li>
                }
            </ul>
        </div>
    </div>
}



